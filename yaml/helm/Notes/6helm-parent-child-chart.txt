Step 1: Install Helm

If you haven't already, install Helm by following the instructions provided earlier.

Step 2: Create the Parent Chart

    Create a directory for your parent chart:



-> helm create java-app-with-mysql

    Navigate to the java-app-with-mysql directory:



-> cd java-app-with-mysql

Step 3: Add Dependency on MySQL Subchart

Open the values. file in the java-app-with-mysql directory and add the following dependency section:


-> vi values.yml 

dependencies:
  - name: mysql
    version: 8.9.0
    repository: https://charts.bitnami.com/bitnami

This section specifies that the parent chart depends on the MySQL subchart from the Bitnami repository.

Step 4: Install Dependencies

Install the dependencies using the helm dependency command:



-> helm dependency update

Step 5: Create Templates for Java Application

In the templates directory of the java-app-with-mysql chart, create templates for your Java application's resources. For example, you might create a Deployment and a Service for your Java application.

Here's an example of a deployment. file:

-> vi deployment.yml 

apiVersion: apps/v1
kind: Deployment
metadata:
  name: java-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: java-app
  template:
    metadata:
      labels:
        app: java-app
    spec:
      containers:
        - name: java-app
          image: your-java-image
          env:
            - name: DB_HOST
              value: {{ .Release.Name }}-mysql
            - name: DB_PORT
              value: "3306"
            # Add more environment variables as needed

Step 6: Package and Install the Parent Chart

    Navigate back to the root directory:



cd ..

    Package the parent chart:



-> helm package java-app-with-mysql

    Install the packaged parent chart:



-> helm install my-java-app ./java-app-with-mysql-<version>.tgz

Replace <version> with the actual version number generated by the helm package command.

Step 7: Accessing the MySQL Database

In your Java application, you can access the MySQL database using the hostname and port provided in the environment variables (DB_HOST and DB_PORT) that you set in the deployment. template.